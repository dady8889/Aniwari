@using Aniwari.BL.Services;

@page "/settings"

@inject ISettingsService SettingsService

@if (Store == null) return;

<div class="settings">
    <div class="aniwari-card">
        @foreach (var (propertyName, setting) in SettingsService.GetStore().GetSettings())
        {
            <div @key="propertyName" class="settings-item">
                <div class="settings-item__description">
                    @setting.Description
                </div>
                <div class="settings-item__control">
                    @if (setting.Type == typeof(bool))
                    {
                        <input type="checkbox" checked="@(Store.Get<bool>(propertyName))" @onchange="async (e) => {
                            Store.Set<bool>(propertyName, (bool?)e.Value ?? false);
                            await SettingsService.SaveAsync();
                        }" />
                    }
                </div>
            </div>

            <hr>
        }

        <div class="settings-item">
            <div class="settings-item__description">
                Delete watchlist
            </div>
            <div class="settings-item__control">
                <input type="button" @onclick="async () => {
                    SettingsService.GetStore().Animes.Clear();
                    await SettingsService.SaveAsync();
                }" value="Delete" />
            </div>
        </div>
    </div>
</div>



@code {
    private SettingsStore? Store;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        Store = SettingsService.GetStore();
    }
}
