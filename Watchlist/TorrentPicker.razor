@using Aniwari.BL.Services;

@if (Torrents == null) return;

<input type="button" class="return-button" value="Return" @onclick="OnSelectClicked" />

<div class="aniwari-card">

    @{
        var lastTorrent = Torrents.LastOrDefault();
    }

    @if (lastTorrent == null)
    {
        <div class="aniwari-list-item">
            <div class="torrent-picker-item__name">
                No results found
            </div>
        </div>
    }
    else
    {
        @foreach (var torrent in Torrents)
        {
            <div class="aniwari-list-item">

                <div class="torrent-picker-item__name">
                    @torrent.Name
                </div>

                <div class="torrent-info-wrapper">
                    <div class="seeders">
                        @torrent.Seeders
                    </div>

                    <input type="button" class="torrent-picker-item__select" value="Select" @onclick="OnSelectClicked" />
                </div>

            </div>
        }
    }
</div>

@code {
    public record TorrentSelectedEventArgs();

    [Parameter] public List<NyaaAnime>? Torrents { get; set; } = null;
    [Parameter] public EventCallback<TorrentSelectedEventArgs> OnTorrentSelected { get; set; }

    private async Task OnSelectClicked()
    {
        if (OnTorrentSelected.HasDelegate)
            await OnTorrentSelected.InvokeAsync(new TorrentSelectedEventArgs());

        Torrents = null;
    }
}